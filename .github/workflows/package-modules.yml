name: Package Node Modules

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Add this line to ensure the token has the correct permissions

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Specify the Node.js version you need

    - name: Install dependencies
      run: npm install

    - name: Package node_modules contents
      run: tar -czf node_modules.tar.gz -C node_modules .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: node_modules
        path: node_modules.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.WORKFLOW_TOKEN }}
        script: |
          const tagName = `release-${new Date().toISOString().split('T')[0]}`;  // e.g., release-2024-07-10
          const releaseName = `Release ${new Date().toISOString().split('T')[0]}`;
          const commitSha = context.sha;

          const response = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tagName,
            target_commitish: commitSha,
            name: releaseName,
            body: 'Auto-generated release from GitHub Actions',
            draft: false,
            prerelease: false
          });

          core.setOutput('upload_url', response.data.upload_url);

    - name: Upload Node Modules to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./node_modules.tar.gz
        asset_name: node_modules.tar.gz
        asset_content_type: application/gzip
